<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on solareenlo</title><link>https://solareenlo.com/docs/go/</link><description>Recent content in Go on solareenlo</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://solareenlo.com/docs/go/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://solareenlo.com/docs/go/closure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://solareenlo.com/docs/go/closure/</guid><description>closure とは 関数オブジェクトの1つ． 引数以外の変数を実行時の環境ではなく，closure が定義されている環境（静的スコープ）において解決することを特徴とする． closure のメリット closure を高階関数の引数に渡して，記述の簡素化や高階関数の外側の状態の参照が可能になる． closure は遅延評価される（呼び出されるまで何も実行しない）ので，制御構造の定義に用いることができる． Go の関数は closure closure は closure 自身の外部から変数を参照する関数値のことであり， closure は参照された変数へアクセスして変えることができる． その意味で，closure はその変数へ bind されている． Go における closure としての無名関数の特徴 closure から参照されたローカル変数は，関数内のローカル変数とは別物になりclosure の変数になる． closure が何らかの形で参照される限り closure の変数も破棄されない．</description></item><item><title/><link>https://solareenlo.com/docs/go/declaration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://solareenlo.com/docs/go/declaration/</guid><description>Declaration Syntax 公式による解説ブログ Go&amp;rsquo;s Declaration Syntax 上記の日本語訳: Go&amp;rsquo;s Declaration Syntaxのゆるーい和訳</description></item><item><title/><link>https://solareenlo.com/docs/go/slice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://solareenlo.com/docs/go/slice/</guid><description>slice 可変長配列を持たない代わりに実装された型． 配列全体のポインタ（ptr），配列の長さ（len），配列の容量（cap）を保持するデータ構造． 配列の部分列を簡単に取り出せる． 公式による解説ブログ Go Slices: usage and internals slice と array の定義 slice の定義 test := []int{1, 2, 3} //要素数3 容量3の slice test := make([]int, 3, 3) //要素数3 要素数3の slice array の定義 var test[] //要素数0 容量0の array var test[10] //要素数10 容量10の array test := [3]int{1, 2, 3} //要素数3 容量3の array test := [...]int{1, 2, 3} //要素数3 容量3の array Reference: Go言語のスライスで勘違いしやすいこところ</description></item><item><title/><link>https://solareenlo.com/docs/go/vim-go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://solareenlo.com/docs/go/vim-go/</guid><description>vim-go vim 用の Go 開発プラグイン GitHub: fatih/vim-go 日本語訳 GitHub: hnakamur/vim-go-tutorial-ja</description></item></channel></rss>